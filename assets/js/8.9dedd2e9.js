(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{274:function(t,a,e){t.exports=e.p+"assets/img/corpus-frontend.dedecb0d.png"},306:function(t,a,e){"use strict";e.r(a);var s=e(13),r=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"getting-started"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getting-started"}},[t._v("#")]),t._v(" Getting Started")]),t._v(" "),a("p",[t._v("There's "),a("RouterLink",{attrs:{to:"/guide/#try-it-online"}},[t._v("several examples online")]),t._v(" of what you can do with BlackLab.")],1),t._v(" "),a("p",[t._v("But at some point, you're going to want to run it yourself so you can experiment with your own data.")]),t._v(" "),a("p",[t._v("Before you can search your data using BlackLab, you'll need to:")]),t._v(" "),a("ul",[a("li",[t._v("Install BlackLab")]),t._v(" "),a("li",[t._v("Prepare your data")]),t._v(" "),a("li",[t._v("Index your data")])]),t._v(" "),a("p",[t._v("Let's go over these one by one.")]),t._v(" "),a("h2",{attrs:{id:"install-blacklab"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install-blacklab"}},[t._v("#")]),t._v(" Install BlackLab")]),t._v(" "),a("p",[t._v("The web service, BlackLab Server, can be used from any programming language and offers a simple REST API (also called a web service).")]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("Using BlackLab as a (JVM) library")]),t._v(" "),a("p",[t._v("BlackLab is also available in library form. It is written in Java, so it can be used from any JVM language (Java, Kotlin, Scala, etc.).")]),t._v(" "),a("p",[t._v("This guide will look at BlackLab Server. If you're interested in the JVM library, see the "),a("RouterLink",{attrs:{to:"/development/"}},[t._v("Developers")]),t._v(" section.")],1)]),t._v(" "),a("p",[t._v("You will need a JVM version of 11 or higher to use the latest BlackLab versions. Also install Apache Tomcat 9. For example, on Ubuntu:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" openjdk-11-jdk tomcat9\n")])])]),a("p",[t._v("Create an empty directory where you want to store your indexed corpora. Make sure it has the permissions you require. For example:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Create directory")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" /data/blacklab-corpora\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Make sure you own it, so you can create corpora there")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chown")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-R")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$USER")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$GROUP")]),t._v(" /data/blacklab-corpora\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Make sure it's world-readable so Tomcat can read it")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-R")]),t._v(" a+rx /data/blacklab-corpora\n")])])]),a("p",[t._v("Now create a directory "),a("code",[t._v("/etc/blacklab")]),t._v(" with a file named "),a("code",[t._v("blacklab-server.yaml")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Create directory")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" /etc/blacklab\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Create empty config file and take ownership of it")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("touch")]),t._v(" /etc/blacklab/blacklab-server.yaml\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chown")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$USER")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$GROUP")]),t._v(" /etc/blacklab/blacklab-server.yaml\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Make sure Tomcat can access the directory and file")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-R")]),t._v(" a+rX /etc/blacklab\n")])])]),a("p",[t._v("(NOTE: if you cannot create a directory under "),a("code",[t._v("/etc/")]),t._v(", see the TIP under "),a("RouterLink",{attrs:{to:"/server/#configuration-file"}},[t._v("configuration file")]),t._v(" for alternatives)")],1),t._v(" "),a("p",[t._v("Now, edit the file "),a("code",[t._v("/etc/blacklab/blacklab-server.yaml")]),t._v(" using a text editor:")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("configVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Where indexes can be found")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (list directories whose subdirectories are indexes, or directories containing a single index)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("indexLocations")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /data/blacklab"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("corpora\n")])])]),a("p",[t._v("On the "),a("a",{attrs:{href:"https://github.com/INL/BlackLab/releases/",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub releases page"),a("OutboundLink")],1),t._v(", find the latest stable version (usually at the top) and download the attached file named "),a("code",[t._v("blacklab-server-VERSION.war")]),t._v(". Place this file in Tomcat's "),a("code",[t._v("webapps")]),t._v(" directory. Tomcat should automatically recognize the file and initialize the application (usually, it will extract it to a subdirectory).")]),t._v(" "),a("p",[t._v("Now go to "),a("a",{attrs:{href:"https://localhost:8080/blacklab-server/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://localhost:8080/blacklab-server/"),a("OutboundLink")],1),t._v(" (or substitute the hostname of the server you've installed it on if not running locally) and you should see an XML response from BlackLab.")]),t._v(" "),a("p",[a("em",[t._v("("),a("RouterLink",{attrs:{to:"/server/"}},[t._v("learn more about BlackLab Server")]),t._v(")")],1)]),t._v(" "),a("h2",{attrs:{id:"prepare-your-data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prepare-your-data"}},[t._v("#")]),t._v(" Prepare your data")]),t._v(" "),a("p",[t._v("In order to search your data using BlackLab, it needs to be in a supported format, and it needs to be indexed by BlackLab.")]),t._v(" "),a("h3",{attrs:{id:"supported-formats"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#supported-formats"}},[t._v("#")]),t._v(" Supported formats")]),t._v(" "),a("p",[t._v("BlackLab supports a number of input formats, but the most well-known are "),a("a",{attrs:{href:"http://www.tei-c.org/index.xml",target:"_blank",rel:"noopener noreferrer"}},[t._v("TEI"),a("OutboundLink")],1),t._v(" (Text Encoding Initiative) and "),a("a",{attrs:{href:"http://proycon.github.io/folia/",target:"_blank",rel:"noopener noreferrer"}},[t._v("FoLiA"),a("OutboundLink")],1),t._v(" (Format for Linguistic Annotation). These are both XML formats. If your data is not already in one of the supported formats, you need to convert it. (see the next section if you want to use a test dataset instead of your own)")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("PLEASE NOTE")]),t._v(" "),a("p",[t._v("BlackLab needs "),a("em",[t._v("tokenized")]),t._v(" data files as input. That means the word boundaries have already been determined and BlackLab can just index each word as it parses the input file.")]),t._v(" "),a("p",[t._v("It is possible to configure BlackLab to perform the necessary tokenizing and tagging; see "),a("RouterLink",{attrs:{to:"/development/customization/plugins.html"}},[t._v("Convert/Tag plugins")]),t._v(".")],1)]),t._v(" "),a("p",[t._v("One way to convert your data is using our tool "),a("a",{attrs:{href:"https://github.com/INL/OpenConvert",target:"_blank",rel:"noopener noreferrer"}},[t._v("OpenConvert"),a("OutboundLink")],1),t._v(", which can generate TEI or FoLiA from txt, doc(x) or html files, among others. After conversion, you can tag the files using a tool such as "),a("a",{attrs:{href:"http://ilk.uvt.nl/frog/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Frog"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("p",[t._v("A "),a("a",{attrs:{href:"http://openconvert.clarin.inl.nl/",target:"_blank",rel:"noopener noreferrer"}},[t._v("web-based user interface"),a("OutboundLink")],1),t._v(" for converting and tagging (Dutch) input files is available. You will need a "),a("a",{attrs:{href:"https://user.clarin.eu/user",target:"_blank",rel:"noopener noreferrer"}},[t._v("CLARIN.eu account"),a("OutboundLink")],1),t._v(" ("),a("a",{attrs:{href:"https://www.clarin.eu/content/clarin-identity-provider",target:"_blank",rel:"noopener noreferrer"}},[t._v("more information"),a("OutboundLink")],1),t._v(").")]),t._v(" "),a("h3",{attrs:{id:"testing-with-the-brown-corpus"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#testing-with-the-brown-corpus"}},[t._v("#")]),t._v(" Testing with the Brown corpus")]),t._v(" "),a("p",[t._v("If you can't use your own data yet, we've provided a "),a("a",{attrs:{href:"https://github.com/INL/BlackLab/wiki/brownCorpus.lemmatized.xml.zip",target:"_blank",rel:"noopener noreferrer"}},[t._v("tokenized, annotated TEI version of the Brown corpus"),a("OutboundLink")],1),t._v(" for you to test with.")]),t._v(" "),a("p",[a("strong",[t._v("NOTE:")]),t._v(" to index this version of the Brown corpus, use the "),a("code",[t._v("tei-p5-legacy")]),t._v(" input format.")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Brown corpus")]),t._v(" "),a("p",[t._v("The "),a("a",{attrs:{href:"http://en.wikipedia.org/wiki/Brown_Corpus",title:"http://en.wikipedia.org/wiki/Brown_Corpus",target:"_blank",rel:"noopener noreferrer"}},[t._v("Brown corpus"),a("OutboundLink")],1),t._v(" is a corpus compiled in the 1960s by "),a("a",{attrs:{href:"http://archive.org/details/BrownCorpus",target:"_blank",rel:"noopener noreferrer"}},[t._v("Nelson Francis and Henry Kucera"),a("OutboundLink")],1),t._v(" at Brown University. It is small by today's standard (500 documents, 1M words). It was converted to TEI format by "),a("a",{attrs:{href:"http://users.ox.ac.uk/~lou/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Lou Burnard"),a("OutboundLink")],1),t._v(". It is available from archive.org under the "),a("a",{attrs:{href:"http://creativecommons.org/licenses/by-nc/3.0/",target:"_blank",rel:"noopener noreferrer"}},[t._v("CC-BY-NC 3.0"),a("OutboundLink")],1),t._v(" license, but we've created our own version which includes lemmata."),a("br"),t._v("(Please note that we didn't check the lemmatization, and it probably contains errors - useful for testing purposes only!)")])]),t._v(" "),a("h3",{attrs:{id:"index-the-data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#index-the-data"}},[t._v("#")]),t._v(" Index the data")]),t._v(" "),a("p",[t._v("There's a commandline tool to create a corpus called "),a("code",[t._v("IndexTool")]),t._v(". To use it, also download the blacklab-core-VERSION.jar from the "),a("a",{attrs:{href:"https://github.com/INL/BlackLab/releases/",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub releases page"),a("OutboundLink")],1),t._v(" and extract it somewhere convenient.")]),t._v(" "),a("p",[t._v("From this directory, run the IndexTool without parameters for help information:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v('java -cp "blacklab-VERSION.jar:lib" nl.inl.blacklab.tools.IndexTool\n')])])]),a("p",[t._v("(NOTE: replace VERSION with the correct version. "),a("code",[t._v("blacklab-VERSION.jar")]),t._v(" and the "),a("code",[t._v("lib")]),t._v(" subdirectory containing required libraries should be located in the current directory; if not, prefix it with the correct directory)")]),t._v(" "),a("p",[t._v("(if you're on Windows, replace the classpath separator colon "),a("code",[t._v(":")]),t._v(" with a semicolon "),a("code",[t._v(";")]),t._v(")")]),t._v(" "),a("p",[t._v("We want to create a new index, so we need to supply an index directory, input file(s) and an input format:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v('java -cp "blacklab-VERSION.jar:lib" nl.inl.blacklab.tools.IndexTool create INDEX_DIR INPUT_FILES FORMAT\n')])])]),a("p",[t._v("If you specify a directory as the "),a("code",[t._v("INPUT_FILES")]),t._v(", it will be scanned recursively. You can also specify a file glob (such as *.xml) or a single file. If you specify a .zip or .tar.gz file, BlackLab will automatically index its contents.")]),t._v(" "),a("p",[t._v("For example, if you have TEI-P5 data in "),a("code",[t._v("/tmp/my-tei/")]),t._v(" and want to create an index "),a("code",[t._v("/data/blacklab-corpora/my-corpus")]),t._v(", run the following command:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v('java -cp "blacklab-VERSION.jar" nl.inl.blacklab.tools.IndexTool create /data/blacklab-corpora/my-corpus /tmp/my-tei/ tei-p5\n')])])]),a("p",[t._v("("),a("strong",[t._v("NOTE:")]),t._v(" for the included Brown corpus data, use the "),a("code",[t._v("tei-p5-legacy")]),t._v(" input format)")]),t._v(" "),a("p",[t._v("Your data is indexed and placed in a new BlackLab corpus in the "),a("code",[t._v("/data/blacklab-corpora/my-corpus")]),t._v(" directory.")]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[a("b",[t._v("TIP:")]),t._v(" Give Java enough memory")]),t._v(" "),a("p",[t._v("Please note that if you're indexing very large files, you should "),a("a",{attrs:{href:"https://docs.oracle.com/cd/E15523_01/web.1111/e13814/jvm_tuning.htm#PERFM161",target:"_blank",rel:"noopener noreferrer"}},[t._v("give java more than the default heap memory"),a("OutboundLink")],1),t._v(", using the "),a("code",[t._v("-Xmx")]),t._v(" option. For really large files, and if you have the memory, you could use "),a("code",[t._v("-Xmx 6G")]),t._v(", for example.")])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[a("b",[t._v("TIP:")]),t._v(" TEI variants")]),t._v(" "),a("p",[t._v("BlackLab now includes three TEI variants: "),a("code",[t._v("tei-p5")]),t._v(" (TEI-P5 using the "),a("code",[t._v("pos")]),t._v(" attribute), "),a("code",[t._v("tei-p5-legacy")]),t._v(" (same but using the nonstandard "),a("code",[t._v("type")]),t._v(" attribute for part of speech) and "),a("code",[t._v("tei-p4-legacy")]),t._v(" (TEI-P4 using the "),a("code",[t._v("type")]),t._v(" attribute). Make sure you pick the right variant for you, or copy one of the "),a("code",[t._v("tei-*.blf.yaml")]),t._v(" files and customize it to your needs.")])]),t._v(" "),a("p",[t._v("See also:")]),t._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/guide/how-to-configure-indexing.html"}},[t._v("Adding a new input format")]),t._v(" (if your format isn't supported yet and you don't want to convert)")],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/guide/indexing-with-blacklab.html"}},[t._v("Indexing in detail")])],1)]),t._v(" "),a("h3",{attrs:{id:"testing-your-index"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#testing-your-index"}},[t._v("#")]),t._v(" Testing your index")]),t._v(" "),a("h4",{attrs:{id:"blacklab-server"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#blacklab-server"}},[t._v("#")]),t._v(" BlackLab Server")]),t._v(" "),a("p",[t._v("If your corpus was created as a subdirectory of the "),a("code",[t._v("indexLocation")]),t._v(" you configured above ("),a("code",[t._v("/data/blacklab-corpora")]),t._v(" in the above example), BlackLab Server should pick it up automatically. You can test this by going to http://localhost:8080/blacklab-server/my-corpus. If it worked, you should see metadata about your corpus.")]),t._v(" "),a("h4",{attrs:{id:"command-line-querytool"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#command-line-querytool"}},[t._v("#")]),t._v(" Command line QueryTool")]),t._v(" "),a("p",[a("strong",[t._v("TODO:")]),t._v(" move to "),a("code",[t._v("/development/")])]),t._v(" "),a("p",[t._v("BlackLab Core includes a very basic command-based query tool useful for testing and debugging. To query the index you just created using this tool, type:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v('java -cp "blacklab-VERSION.jar:lib" nl.inl.blacklab.tools.QueryTool /data/blacklab-corpora/my-corpus\n')])])]),a("p",[t._v("The query tool supports several query languages, but it will start in CorpusQL mode. A few hints:")]),t._v(" "),a("ul",[a("li",[t._v("Enclose each word between double quotes: "),a("code",[t._v('"the" "egg"')]),t._v(' searches for "the" followed by "egg"')]),t._v(" "),a("li",[t._v("You can user regular expressions: "),a("code",[t._v('".*g"')]),t._v(" searches for words ending with 'g'")]),t._v(" "),a("li",[t._v('If you want to get more of a feel for what kinds of matches were found, try grouping by matched text using the command "group match". Then, if you want to view one of the groups, use '),a("code",[t._v("group *n*")]),t._v(".")])]),t._v(" "),a("p",[t._v('Type "help" to see a list of commands.')]),t._v(" "),a("p",[t._v("See also:")]),t._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/development/query-tool.html"}},[t._v("Using the query tool")])],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/guide/corpus-query-language.html"}},[t._v("BlackLab Corpus Query Language")])],1)]),t._v(" "),a("h2",{attrs:{id:"corpus-search-application"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#corpus-search-application"}},[t._v("#")]),t._v(" Corpus search application")]),t._v(" "),a("p",[t._v("BlackLab Frontend is our corpus search application. It is easy to install; see its ("),a("a",{attrs:{href:"https://github.com/INL/corpus-frontend/",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub page"),a("OutboundLink")],1),t._v(") for instructions.")]),t._v(" "),a("p",[a("strong",[t._v("TODO:")]),t._v(" quick install info here.")]),t._v(" "),a("p",[a("img",{attrs:{src:e(274),alt:"Screenshot of corpus-frontend"}})]),t._v(" "),a("h2",{attrs:{id:"a-simple-script"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#a-simple-script"}},[t._v("#")]),t._v(" A simple script")]),t._v(" "),a("p",[t._v("If you want to access your corpus using a script, that is easy as well.")]),t._v(" "),a("p",[t._v("Below is an example in Python. It performs a CQL query and shows matches in KWIC (keyword in context) format:")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" urllib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parse\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" urllib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("request\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" json\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("words")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('""" Convert word array to string. """')]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("join"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'word'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("search")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cqlQuery"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('""" Search and show hits. """')]),t._v("\n\turl "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://localhost:8080/blacklab-server/my-corpus/hits?patt="')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" \\\n\t\turllib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("quote_plus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cqlQuery"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"&outputformat=json"')]),t._v("\n\tf "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" urllib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("urlopen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tresponse "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" json"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("loads"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("read"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("decode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'utf-8'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\thits "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hits'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\tdocs "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'docInfos'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" hit "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" hits"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Show the document title and hit information")]),t._v("\n\t\tdoc "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" docs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("hit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'docPid'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("words"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'left'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" ["')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" words"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'match'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"] "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" \\\n\t\t\twords"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'right'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" ("')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" doc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'title'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('")"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# "Main program"')]),t._v("\nsearch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'[pos="a.*"] "fox"\'')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("More examples can be found "),a("RouterLink",{attrs:{to:"/server/from-different-languages.html"}},[t._v("here")]),t._v(".")],1)])}),[],!1,null,null,null);a.default=r.exports}}]);