(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{291:function(a,t,n){"use strict";n.r(t);var e=n(13),s=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"plugins-for-converting-tagging"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#plugins-for-converting-tagging"}},[a._v("#")]),a._v(" Plugins for converting/tagging")]),a._v(" "),t("p",[a._v("Convert and Tag plugins allow you to convert documents from formats like "),t("code",[a._v(".docx")]),a._v(" or "),t("code",[a._v(".pdf")]),a._v(" into an XML format, tokenize them and tag each word with annotations like lemma and part of speech.")]),a._v(" "),t("ul",[t("li",[a._v("Create a class implementing "),t("code",[a._v("ConvertPlugin")]),a._v(" or "),t("code",[a._v("TagPlugin")])]),a._v(" "),t("li",[a._v("Make the class known to the java "),t("a",{attrs:{href:"https://docs.oracle.com/javase/tutorial/sound/SPI-intro.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("SPI"),t("OutboundLink")],1),a._v(" system."),t("br"),a._v("\nIn short:\n"),t("ul",[t("li",[a._v("Create a jar containing your plugin class.")]),a._v(" "),t("li",[a._v("Add a file to the jar under "),t("code",[a._v("/META-INF/services/")]),a._v(" with the name "),t("code",[a._v("nl.inl.blacklab.indexers.preprocess.ConvertPlugin")]),a._v(" or "),t("code",[a._v("nl.inl.blacklab.indexers.preprocess.TagPlugin")]),a._v(" depending on your plugin's type.")]),a._v(" "),t("li",[a._v("Add a single line containing your class's fully-qualified class name.")]),a._v(" "),t("li",[a._v("Add your jar to BlackLab's classpath.")])])])]),a._v(" "),t("p",[a._v("Configuring your plugin is possible through "),t("code",[a._v("blacklab[-server].yaml")]),a._v("."),t("br"),a._v("\nAny options under "),t("code",[a._v("plugins.yourPluginId")]),a._v(" will be passed to your plugin when it's initialized.")]),a._v(" "),t("p",[a._v("Example:")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Plugin options. Plugins allow you to automatically convert files (e.g. .html, .docx) or")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# apply linguistic tagging before indexing.")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("plugins")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Should we initialize plugins when they are first used?")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# (plugin initialization can take a while; during development, delayed initialization is")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# often convenient, but during production, you usually want to initialize right away)")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("delayInitialization")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[a._v("false")]),a._v("\n\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Individual plugin configurations")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("plugins")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Conversion plugin")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("OpenConvert")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("jarPath")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/home/jan/int-projects/blacklab-data/autosearch-plugins/jars/OpenConvert-0.2.0.jar"')]),a._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Tagging plugin")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("DutchTagger")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("jarPath")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/home/jan/int-projects/blacklab-data/autosearch-plugins/jars/DutchTagger-0.2.0.jar"')]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("vectorFile")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/home/jan/int-projects/blacklab-data/autosearch-plugins/tagger-data/sonar.vectors.bin"')]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("modelFile")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("   "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/home/jan/int-projects/blacklab-data/autosearch-plugins/tagger-data/withMoreVectorrs"')]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("lexiconFile")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/home/jan/int-projects/blacklab-data/autosearch-plugins/tagger-data/spelling.tab"')]),a._v("\n")])])]),t("p",[a._v("If your plugin was loaded successfully it can now be used by adding the following to an import format ("),t("code",[a._v(".blf.yaml")]),a._v(" file):")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("tagplugin")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" yourPluginId\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("convertPlugin")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" yourPluginId\n")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);