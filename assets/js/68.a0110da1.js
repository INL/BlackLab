(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{342:function(t,s,a){"use strict";a.r(s);var e=a(13),r=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"get-input-format-configuration"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get-input-format-configuration"}},[t._v("#")]),t._v(" Get input format configuration")]),t._v(" "),s("p",[t._v("Get the complete format configuration file for one of the available formats.")]),t._v(" "),s("p",[s("strong",[t._v("URL")]),t._v(" : "),s("code",[t._v("/blacklab-server/input-formats/<name>")])]),t._v(" "),s("p",[s("strong",[t._v("Method")]),t._v(" : "),s("code",[t._v("GET")])]),t._v(" "),s("h2",{attrs:{id:"success-response"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#success-response"}},[t._v("#")]),t._v(" Success Response")]),t._v(" "),s("p",[s("strong",[t._v("Code")]),t._v(" : "),s("code",[t._v("200 OK")])]),t._v(" "),s("h3",{attrs:{id:"content-examples"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#content-examples"}},[t._v("#")]),t._v(" Content examples")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"formatName"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tei-p5"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"configFileType"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yaml"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"configFile"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"(format configuration)"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("configFile")]),t._v(" contains an entire input format configuration in the format specified by "),s("code",[t._v("configFileType")]),t._v(" ("),s("code",[t._v("yaml")]),t._v(" or "),s("code",[t._v("json")]),t._v(").")]),t._v(" "),s("h2",{attrs:{id:"error-response"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#error-response"}},[t._v("#")]),t._v(" Error Response")]),t._v(" "),s("p",[s("strong",[t._v("Code")]),t._v(" : "),s("code",[t._v("404 Not Found")])]),t._v(" "),s("h3",{attrs:{id:"content-example"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#content-example"}},[t._v("#")]),t._v(" Content example")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"code"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"NOT_FOUND"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"message"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"The format <name> is not configuration-based, and therefore cannot be displayed."')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"todo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#todo"}},[t._v("#")]),t._v(" TODO")]),t._v(" "),s("ul",[s("li",[t._v("maybe use a different error than "),s("code",[t._v("404 Not Found")]),t._v(" if the format exists but does not target XML.")])])])}),[],!1,null,null,null);s.default=r.exports}}]);