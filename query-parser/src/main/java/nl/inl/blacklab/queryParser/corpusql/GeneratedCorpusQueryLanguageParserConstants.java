/* Generated By:JavaCC: Do not edit this line. GeneratedCorpusQueryLanguageParserConstants.java */
package nl.inl.blacklab.queryParser.corpusql;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface GeneratedCorpusQueryLanguageParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT = 5;
  /** RegularExpression Id. */
  int MULTI_LINE_COMMENT = 6;
  /** RegularExpression Id. */
  int WITHIN = 7;
  /** RegularExpression Id. */
  int CONTAINING = 8;
  /** RegularExpression Id. */
  int DEFAULT_VALUE = 9;
  /** RegularExpression Id. */
  int ROOT_DEP_OP = 10;
  /** RegularExpression Id. */
  int DEP_OP = 11;
  /** RegularExpression Id. */
  int ALIGNMENT_OP = 12;
  /** RegularExpression Id. */
  int NAME = 13;
  /** RegularExpression Id. */
  int FLAGS = 14;
  /** RegularExpression Id. */
  int NUMBER = 15;
  /** RegularExpression Id. */
  int SETTINGS_OP = 16;
  /** RegularExpression Id. */
  int QUOTED_STRING = 17;
  /** RegularExpression Id. */
  int SINGLE_QUOTED_STRING = 18;
  /** RegularExpression Id. */
  int CONSTRAINT_THING = 19;
  /** RegularExpression Id. */
  int EQUALS = 20;
  /** RegularExpression Id. */
  int NOT_EQUALS = 21;
  /** RegularExpression Id. */
  int GREATER_THAN_EQUALS = 22;
  /** RegularExpression Id. */
  int LESS_THAN_EQUALS = 23;
  /** RegularExpression Id. */
  int GREATER_THAN = 24;
  /** RegularExpression Id. */
  int LESS_THAN = 25;
  /** RegularExpression Id. */
  int LPAREN = 26;
  /** RegularExpression Id. */
  int RPAREN = 27;
  /** RegularExpression Id. */
  int NEGATE = 28;
  /** RegularExpression Id. */
  int DOT = 29;
  /** RegularExpression Id. */
  int COMMA = 30;
  /** RegularExpression Id. */
  int DELIMITER = 31;
  /** RegularExpression Id. */
  int COLON = 32;
  /** RegularExpression Id. */
  int FORWARD_SLASH = 33;
  /** RegularExpression Id. */
  int BACKSLASH = 34;
  /** RegularExpression Id. */
  int MULT = 35;
  /** RegularExpression Id. */
  int PLUS = 36;
  /** RegularExpression Id. */
  int QUESTION = 37;
  /** RegularExpression Id. */
  int LBRACE = 38;
  /** RegularExpression Id. */
  int RBRACE = 39;
  /** RegularExpression Id. */
  int AND = 40;
  /** RegularExpression Id. */
  int OR = 41;
  /** RegularExpression Id. */
  int ARROW_RIGHT = 42;
  /** RegularExpression Id. */
  int LBRACKET = 43;
  /** RegularExpression Id. */
  int RBRACKET = 44;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<SINGLE_LINE_COMMENT>",
    "<MULTI_LINE_COMMENT>",
    "\"within\"",
    "\"containing\"",
    "\"_\"",
    "<ROOT_DEP_OP>",
    "<DEP_OP>",
    "<ALIGNMENT_OP>",
    "<NAME>",
    "<FLAGS>",
    "<NUMBER>",
    "<SETTINGS_OP>",
    "<QUOTED_STRING>",
    "<SINGLE_QUOTED_STRING>",
    "\"::\"",
    "\"=\"",
    "\"!=\"",
    "\">=\"",
    "\"<=\"",
    "\">\"",
    "\"<\"",
    "\"(\"",
    "\")\"",
    "\"!\"",
    "\".\"",
    "\",\"",
    "\";\"",
    "\":\"",
    "\"/\"",
    "\"\\\\\"",
    "\"*\"",
    "\"+\"",
    "\"?\"",
    "\"{\"",
    "\"}\"",
    "\"&\"",
    "\"|\"",
    "\"->\"",
    "\"[\"",
    "\"]\"",
  };

}
